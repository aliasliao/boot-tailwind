# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build and Release

on:
  push:

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 2

    - name: Detect package version
      uses: salsify/action-detect-and-tag-new-version@v2
      id: version-detect

    - name: Setup node
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
        registry-url: 'https://registry.npmjs.org'

    - name: Setup yarn
      run: npm install -g yarn

    - name: Build
      run: |
        echo "previous-version: ${{ steps.version-updated.outputs.previous-version }}"
        echo "current-version : ${{ steps.version-updated.outputs.current-version }}"
        yarn
        yarn build
        ls -alh dist

    - name: Triger release with package.json
      uses: softprops/action-gh-release@v1
      if: steps.version-updated.outputs.previous-version < steps.version-detect.outputs.current-version
      with:
        files: dist/main.css
        tag_name: ${{ steps.version-detect.outputs.current-version }}

    - name: Publish with package.json
      run: npm publish --access public
      if: steps.version-updated.outputs.previous-version < steps.version-detect.outputs.current-version
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
